{"version":3,"file":"static/js/690.337264f9.chunk.js","mappings":"0LAGA,MCH+D,GAAgBA,aDG1D,CACjBC,KAAM,gBACNC,QAAS,kLACTC,YAAa,0GACbC,YAAa,qBACbC,IAAK,44BAoCLC,QAAS,CACLC,QAAQ,EACRC,UAAW,sBACXC,MAAO,GACPC,KAAM,CAAC,CACXC,MAAO,mDACPR,YAAa,mDACbS,KAAM,ivJAwINC,MAAO,CAAC,CACRZ,KAAM,gBACNG,YAAa,iCACbU,U,SACF,CACEb,KAAM,OACNG,YAAa,OACbU,U,SACF,CACEb,KAAM,eACNG,YAAa,qBACbU,U,eCrMSC,EAAW,CAAC,KAAO,gBAAgB,QAAU,QAAQ,gBAAe,EAAK,aAAa,iBAAiB,QAAU,CAAC,CAAC,KAAO,gBAAgB,QAAU,gDAAgD,YAAc,0GAA+B,YAAc,uB","sources":["../../README.md","../node_modules/readme/modules.js"],"sourcesContent":["import * as component_1 from '@kne/current-lib_local-storage';\nimport * as component_2 from 'antd';\nimport * as component_3 from '@kne/remote-loader';\nconst readmeConfig = {\n    name: `local-storage`,\n    summary: `<p>提供给了localStorage存取的安全的序列化，并且处理了不同数据的类型</p>`,\n    description: `用于存取localStorage数据并进行数据格式转换.`,\n    packageName: `@kne/local-storage`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>getItem(key)</td>\n<td>获取localStorage的值</td>\n<td>function</td>\n<td></td>\n</tr>\n<tr>\n<td>setItem(key,value,expire)</td>\n<td>设置localStorage的值</td>\n<td>function</td>\n<td></td>\n</tr>\n<tr>\n<td>removeItem(key)</td>\n<td>删除localStorage的值</td>\n<td>function</td>\n<td></td>\n</tr>\n<tr>\n<td>cache(key, getValue, expire)</td>\n<td>如果key已经被设置了value则直接返回value，如果没有呗设置或者已经失效，调用getValue方法获取新的值设置localStorage后返回</td>\n<td>function</td>\n<td></td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: true,\n        className: `local_storage_417c0`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: localStorage } = _LocalStorage;\nconst { Button, App } = antd;\nconst { createWithRemoteLoader } = remoteLoader;\nconst BaseExample = createWithRemoteLoader({\n  modules: ['InfoPage', 'Modal@useConfirmModal']\n})(({ remoteModules }) => {\n  const [InfoPage, useConfirmModal] = remoteModules;\n  const modal = useConfirmModal();\n  const { message } = App.useApp();\n  return (\n    <InfoPage>\n      <InfoPage.Part title=\"数字类型\">\n        <Button\n          onClick={() => {\n            localStorage.setItem('__localStorage_test_number', 10);\n            message.success('设置成功');\n          }}>\n          设置值\n        </Button>\n        <Button\n          onClick={() => {\n            modal({\n              type: 'info',\n              message: localStorage.getItem('__localStorage_test_number')\n            });\n          }}>\n          获取值\n        </Button>\n        <Button\n          onClick={() => {\n            localStorage.removeItem('__localStorage_test_number');\n            message.success('删除成功');\n          }}>\n          删除值\n        </Button>\n      </InfoPage.Part>\n      <InfoPage.Part title=\"字符串类型\">\n        <Button\n          onClick={() => {\n            localStorage.setItem('__localStorage_test_string', '我有一直小毛驴我从来也不骑');\n            message.success('设置成功');\n          }}>\n          设置值\n        </Button>\n        <Button\n          onClick={() => {\n            modal({\n              type: 'info',\n              message: localStorage.getItem('__localStorage_test_string')\n            });\n          }}>\n          获取值\n        </Button>\n        <Button\n          onClick={() => {\n            localStorage.removeItem('__localStorage_test_string');\n            message.success('删除成功');\n          }}>\n          删除值\n        </Button>\n      </InfoPage.Part>\n      <InfoPage.Part title=\"对象类型\">\n        <Button\n          onClick={() => {\n            localStorage.setItem('__localStorage_test_object', { message: '我有一直小毛驴我从来也不骑' });\n            message.success('设置成功');\n          }}>\n          设置值\n        </Button>\n        <Button\n          onClick={() => {\n            modal({\n              type: 'info',\n              message: JSON.stringify(localStorage.getItem('__localStorage_test_object'), null, 2)\n            });\n          }}>\n          获取值\n        </Button>\n        <Button\n          onClick={() => {\n            localStorage.removeItem('__localStorage_test_object');\n            message.success('删除成功');\n          }}>\n          删除值\n        </Button>\n      </InfoPage.Part>\n      <InfoPage.Part title=\"数组类型\">\n        <Button\n          onClick={() => {\n            localStorage.setItem('__localStorage_test_array', [{ message: '我有一直小毛驴我从来也不骑' }, { message: '我有一直小毛驴我从来也不骑' }]);\n            message.success('设置成功');\n          }}>\n          设置值\n        </Button>\n        <Button\n          onClick={() => {\n            modal({\n              type: 'info',\n              message: JSON.stringify(localStorage.getItem('__localStorage_test_array'), null, 2)\n            });\n          }}>\n          获取值\n        </Button>\n        <Button\n          onClick={() => {\n            localStorage.removeItem('__localStorage_test_array');\n            message.success('删除成功');\n          }}>\n          删除值\n        </Button>\n      </InfoPage.Part>\n      <InfoPage.Part title=\"cache 方法\">\n        <Button\n          onClick={() => {\n            localStorage\n              .cache('__localStorage_test_cache', () => {\n                message.success('getValue执行');\n                return [{ message: '我有一直小毛驴我从来也不骑' }, { message: '我有一直小毛驴我从来也不骑' }];\n              })\n              .then(value => {\n                modal({\n                  type: 'info',\n                  message: JSON.stringify(value, null, 2)\n                });\n              });\n          }}>\n          设置值\n        </Button>\n      </InfoPage.Part>\n    </InfoPage>\n  );\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_LocalStorage\",\n    packageName: \"@kne/current-lib_local-storage\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_2\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_3\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import LocalStorage from '@components/local-storage/README.md';export default {LocalStorage};\nexport const manifest = {\"name\":\"local-storage\",\"version\":\"0.1.1\",\"open-version\":true,\"public-url\":\"/local-storage\",\"modules\":[{\"name\":\"local-storage\",\"baseDir\":\"/home/runner/work/local-storage/local-storage\",\"description\":\"用于存取localStorage数据并进行数据格式转换.\",\"packageName\":\"@kne/local-storage\"}]};"],"names":["LocalStorage","name","summary","description","packageName","api","example","isFull","className","style","list","title","code","scope","component","manifest"],"sourceRoot":""}